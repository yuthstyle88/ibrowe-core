diff --git a/browser/net/brave_network_audit_browsertest.cc b/browser/net/brave_network_audit_browsertest.cc
index 8a2add2252fb1297549fecaafe6c68098559d1ce..566e204689dbdb57e7511faee26264b33e00cd2f 100644
--- a/browser/net/brave_network_audit_browsertest.cc
+++ b/browser/net/brave_network_audit_browsertest.cc
@@ -135,12 +135,12 @@ class BraveNetworkAuditTest : public InProcessBrowserTest {
 #endif  // BUILDFLAG(ENABLE_PLAYLIST_WEBUI)
 };
 
-// Loads brave://welcome first to simulate a first run and then loads another
+// Loads ibrowe://welcome first to simulate a first run and then loads another
 // URL, and finally enables brave rewards, waiting some time after each load to
 // allow gathering network requests.
 IN_PROC_BROWSER_TEST_F(BraveNetworkAuditTest, BasicTests) {
   // Load the Welcome page.
-  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("brave://welcome")));
+  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("ibrowe://welcome")));
   WaitForTimeout(kMaxTimeoutPerLoadedURL);
 
   // Add a password to the password manager.
@@ -157,7 +157,7 @@ IN_PROC_BROWSER_TEST_F(BraveNetworkAuditTest, BasicTests) {
   password_store->AddLogin(signin_form);
 
   // Load the NTP to check requests made from the JS widgets.
-  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("brave://newtab")));
+  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("ibrowe://newtab")));
   WaitForTimeout(kMaxTimeoutPerLoadedURL);
 
   // Load a simple HTML page from the test server.
@@ -165,12 +165,12 @@ IN_PROC_BROWSER_TEST_F(BraveNetworkAuditTest, BasicTests) {
   ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), simple_url));
   WaitForTimeout(kMaxTimeoutPerLoadedURL);
 
-  // Finally, load brave://rewards and enable Brave Rewards.
-  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("brave://rewards")));
+  // Finally, load ibrowe://rewards and enable Brave Rewards.
+  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("ibrowe://rewards")));
   ASSERT_TRUE(EnableBraveRewards());
   WaitForTimeout(kMaxTimeoutPerLoadedURL);
 
-  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("brave://wallet")));
+  ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL("ibrowe://wallet")));
   WaitForTimeout(kMaxTimeoutPerLoadedURL);
 
 #if defined(TOOLKIT_VIEWS)
