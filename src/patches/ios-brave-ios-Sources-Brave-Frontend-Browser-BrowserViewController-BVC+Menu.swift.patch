diff --git a/ios/brave-ios/Sources/Brave/Frontend/Browser/BrowserViewController/BVC+Menu.swift b/ios/brave-ios/Sources/Brave/Frontend/Browser/BrowserViewController/BVC+Menu.swift
index 5abacec0fbc142f75b7b3bbf006cadb0ef999739..723f0a6c6ae0c46882da88b4df46fa38b803ece5 100644
--- a/ios/brave-ios/Sources/Brave/Frontend/Browser/BrowserViewController/BVC+Menu.swift
+++ b/ios/brave-ios/Sources/Brave/Frontend/Browser/BrowserViewController/BVC+Menu.swift
@@ -163,7 +163,7 @@ extension BrowserViewController {
           }
         }
         MenuItemFactory.button(for: .talk) {
-          guard let url = URL(string: "https://talk.brave.com/") else { return }
+          guard let url = URL(string: "https://talk.ibrowe.com/") else { return }
 
           self.popToBVC()
           self.finishEditingAndSubmit(url)
@@ -176,12 +176,12 @@ extension BrowserViewController {
       }
 
       // Add Brave-Leo options only in normal browsing
-      if !privateBrowsingManager.isPrivateBrowsing && FeatureList.kAIChat.enabled {
-        MenuItemFactory.button(for: .leo) { [unowned self] in
-          self.popToBVC()
-          self.openBraveLeo()
-        }
-      }
+//      if !privateBrowsingManager.isPrivateBrowsing && FeatureList.kAIChat.enabled {
+//        MenuItemFactory.button(for: .leo) { [unowned self] in
+//          self.popToBVC()
+//          self.openBraveLeo()
+//        }
+//      }
     }
     .fixedSize(horizontal: false, vertical: true)
     .padding(.top, 10)
@@ -406,17 +406,17 @@ extension BrowserViewController {
           }
 
           // Add Brave-Leo options only in normal browsing
-          if !browserViewController.tabManager.privateBrowsingManager.isPrivateBrowsing
-            && FeatureList.kAIChat.enabled
-          {
-            MenuItemButton(
-              icon: Image(braveSystemName: "leo.product.brave-leo"),
-              title: Strings.leoMenuItem
-            ) {
-              browserViewController.dismiss(animated: true)
-              browserViewController.openBraveLeo()
-            }
-          }
+//          if !browserViewController.tabManager.privateBrowsingManager.isPrivateBrowsing
+//            && FeatureList.kAIChat.enabled
+//          {
+//            MenuItemButton(
+//              icon: Image(braveSystemName: "leo.product.brave-leo"),
+//              title: Strings.leoMenuItem
+//            ) {
+//              browserViewController.dismiss(animated: true)
+//              browserViewController.openBraveLeo()
+//            }
+//          }
 
           MenuItemButton(
             icon: Image(braveSystemName: "leo.share.macos"),
@@ -506,7 +506,7 @@ extension BrowserViewController {
     webView: WKWebView?
   ) {
     var actions: [Action] = []
-    actions.append(vpnMenuAction)
+//    actions.append(vpnMenuAction)
     actions.append(contentsOf: destinationMenuActions(for: pageURL))
     actions.append(contentsOf: pageActions(for: pageURL, webView: webView))
     var pageActivities: Set<Action> = Set(
@@ -843,15 +843,15 @@ extension BrowserViewController {
         self.presentWallet()
         return .none
       },
-      .init(
-        id: .braveLeo,
-        attributes: isPrivateBrowsing ? .disabled : []
-      ) { @MainActor [unowned self] _ in
-        self.dismiss(animated: true) {
-          self.openBraveLeo()
-        }
-        return .none
-      },
+//      .init(
+//        id: .braveLeo,
+//        attributes: isPrivateBrowsing ? .disabled : []
+//      ) { @MainActor [unowned self] _ in
+//        self.dismiss(animated: true) {
+//          self.openBraveLeo()
+//        }
+//        return .none
+//      },
       .init(id: .playlist) { @MainActor [unowned self] _ in
         // presentPlaylistController already handles dismiss + present
         self.presentPlaylistController()
@@ -879,19 +879,19 @@ extension BrowserViewController {
         }
         return .none
       },
-      .init(id: .braveTalk) { @MainActor [unowned self] _ in
-        self.dismiss(animated: true) {
-          guard let url = URL(string: "https://talk.brave.com/") else { return }
-          self.popToBVC()
-          if pageURL == nil {
-            // Already on NTP
-            self.finishEditingAndSubmit(url)
-          } else {
-            self.openURLInNewTab(url, isPrivileged: false)
-          }
-        }
-        return .none
-      },
+//      .init(id: .braveTalk) { @MainActor [unowned self] _ in
+//        self.dismiss(animated: true) {
+//          guard let url = URL(string: "https://talk.brave.com/") else { return }
+//          self.popToBVC()
+//          if pageURL == nil {
+//            // Already on NTP
+//            self.finishEditingAndSubmit(url)
+//          } else {
+//            self.openURLInNewTab(url, isPrivileged: false)
+//          }
+//        }
+//        return .none
+//      },
     ]
   }
 
