diff --git a/browser/ui/views/omnibox/brave_omnibox_view_views_browsertest.cc b/browser/ui/views/omnibox/brave_omnibox_view_views_browsertest.cc
index 6ddcbec8d73e3d5a1654be2222da542d2d13f299..9d7eb447fe607dd0bee51d92ece6af1b5e12d794 100644
--- a/browser/ui/views/omnibox/brave_omnibox_view_views_browsertest.cc
+++ b/browser/ui/views/omnibox/brave_omnibox_view_views_browsertest.cc
@@ -167,7 +167,7 @@ IN_PROC_BROWSER_TEST_F(BraveOmniboxViewViewsTest, PasteAndSearchTest) {
 // Load brave url and check copied url also has brave scheme.
 IN_PROC_BROWSER_TEST_F(BraveOmniboxViewViewsTest,
                        CopyInternalURLToClipboardTest) {
-  const std::string test_url("brave://version/");
+  const std::string test_url("ibrowe://version/");
   ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL(test_url)));
 
   omnibox_view()->SelectAll(true);
@@ -256,7 +256,7 @@ IN_PROC_BROWSER_TEST_F(BraveOmniboxViewViewsEnabledFeatureTest,
 }
 
 IN_PROC_BROWSER_TEST_F(BraveOmniboxViewViewsTest, DoNotSanitizeInternalURLS) {
-  const std::string test_url("brave://settings/?utm_ad=1");
+  const std::string test_url("ibrowe://settings/?utm_ad=1");
   ASSERT_TRUE(ui_test_utils::NavigateToURL(browser(), GURL(test_url)));
   SetSanitizerRules(R"([
     { "include": [ "*://*/*"], "params": ["utm_ad"] }
@@ -269,7 +269,7 @@ IN_PROC_BROWSER_TEST_F(BraveOmniboxViewViewsTest, DoNotSanitizeInternalURLS) {
   std::string text_from_clipboard;
   clipboard->ReadAsciiText(ui::ClipboardBuffer::kCopyPaste,
                            /* data_dst = */ nullptr, &text_from_clipboard);
-  EXPECT_EQ(text_from_clipboard, "brave://settings/?utm_ad=1");
+  EXPECT_EQ(text_from_clipboard, "ibrowe://settings/?utm_ad=1");
 }
 
 IN_PROC_BROWSER_TEST_F(BraveOmniboxViewViewsDisabledFeatureTest,
