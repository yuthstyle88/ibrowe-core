diff --git a/ios/brave-ios/Sources/Brave/Frontend/Browser/DomainUserScript.swift b/ios/brave-ios/Sources/Brave/Frontend/Browser/DomainUserScript.swift
index 4411f8e1567a4da77da41da9def30243ba7b0c5b..41dd50abd7bbaa550edb15eedefd972a0120900c 100644
--- a/ios/brave-ios/Sources/Brave/Frontend/Browser/DomainUserScript.swift
+++ b/ios/brave-ios/Sources/Brave/Frontend/Browser/DomainUserScript.swift
@@ -45,23 +45,266 @@ enum DomainUserScript: CaseIterable {
         "search.brave.com", "search.brave.software",
         "search.bravesoftware.com", "safesearch.brave.com",
         "safesearch.brave.software", "safesearch.bravesoftware.com",
-        "search-dev-local.brave.com",
+        "search-dev-local.ibrowe.com",
       ])
     #if canImport(BraveTalk)
     case .braveTalkHelper:
       return Set([
-        "talk.brave.com",
-        "talk.bravesoftware.com",
-        "talk.brave.software",
+        "talk.ibrowe.com",
+        "talk.ibrowesoftware.com",
+        "talk.ibrowe.software",
       ])
     #endif
     case .bravePlaylistFolderSharingHelper:
-      return Set(["playlist.bravesoftware.com", "playlist.brave.com"])
+      return Set(["playlist.ibrowesoftware.com", "playlist.ibrowe.com"])
     case .braveSkus:
       return Set([
-        "account.brave.com",
-        "account.bravesoftware.com",
-        "account.brave.software",
+        "account.ibrowe.com",
+        "account.ibrowesoftware.com",
+        "account.ibrowe.software",
+      ])
+    }
+  }
+
+  /// Returns a shield type for a given user script domain.
+  /// Returns nil if the domain's user script can't be turned off via a shield toggle. (i.e. it's always enabled)
+  var requiredShield: BraveShield? {
+    switch self {
+    case .braveSearchHelper, .bravePlaylistFolderSharingHelper, .braveSkus:
+      return nil
+    #if canImport(BraveTalk)
+    case .braveTalkHelper:
+      return nil
+    #endif
+    }
+  }
+}
+// Copyright 2020 The Brave Authors. All rights reserved.
+// This Source Code Form is subject to the terms of the Mozilla Public
+// License, v. 2.0. If a copy of the MPL was not distributed with this
+// file, You can obtain one at https://mozilla.org/MPL/2.0/.
+
+import BraveShields
+import Foundation
+import Shared
+import WebKit
+
+enum DomainUserScript: CaseIterable {
+  case braveSearchHelper
+  #if canImport(BraveTalk)
+  case braveTalkHelper
+  #endif
+  case braveSkus
+  case bravePlaylistFolderSharingHelper
+
+  /// Initialize this script with a URL
+  init?(for url: URL) {
+    // First we look for an exact domain match
+    if let host = url.host,
+      let found = Self.allCases.first(where: { $0.associatedDomains.contains(host) })
+    {
+      self = found
+      return
+    }
+
+    // If no matches, we look for a baseDomain (eTLD+1) match.
+    if let baseDomain = url.baseDomain,
+      let found = Self.allCases.first(where: { $0.associatedDomains.contains(baseDomain) })
+    {
+      self = found
+      return
+    }
+
+    return nil
+  }
+
+  /// The domains associated with this script.
+  var associatedDomains: Set<String> {
+    switch self {
+    case .braveSearchHelper:
+      return Set([
+        "search.brave.com", "search.brave.software",
+        "search.bravesoftware.com", "safesearch.brave.com",
+        "safesearch.brave.software", "safesearch.bravesoftware.com",
+        "search-dev-local.ibrowe.com",
+      ])
+    #if canImport(BraveTalk)
+    case .braveTalkHelper:
+      return Set([
+        "talk.ibrowe.com",
+        "talk.ibrowesoftware.com",
+        "talk.ibrowe.software",
+      ])
+    #endif
+    case .bravePlaylistFolderSharingHelper:
+      return Set(["playlist.ibrowesoftware.com", "playlist.ibrowe.com"])
+    case .braveSkus:
+      return Set([
+        "account.ibrowe.com",
+        "account.ibrowesoftware.com",
+        "account.ibrowe.software",
+      ])
+    }
+  }
+
+  /// Returns a shield type for a given user script domain.
+  /// Returns nil if the domain's user script can't be turned off via a shield toggle. (i.e. it's always enabled)
+  var requiredShield: BraveShield? {
+    switch self {
+    case .braveSearchHelper, .bravePlaylistFolderSharingHelper, .braveSkus:
+      return nil
+    #if canImport(BraveTalk)
+    case .braveTalkHelper:
+      return nil
+    #endif
+    }
+  }
+}
+// Copyright 2020 The Brave Authors. All rights reserved.
+// This Source Code Form is subject to the terms of the Mozilla Public
+// License, v. 2.0. If a copy of the MPL was not distributed with this
+// file, You can obtain one at https://mozilla.org/MPL/2.0/.
+
+import BraveShields
+import Foundation
+import Shared
+import WebKit
+
+enum DomainUserScript: CaseIterable {
+  case braveSearchHelper
+  #if canImport(BraveTalk)
+  case braveTalkHelper
+  #endif
+  case braveSkus
+  case bravePlaylistFolderSharingHelper
+
+  /// Initialize this script with a URL
+  init?(for url: URL) {
+    // First we look for an exact domain match
+    if let host = url.host,
+      let found = Self.allCases.first(where: { $0.associatedDomains.contains(host) })
+    {
+      self = found
+      return
+    }
+
+    // If no matches, we look for a baseDomain (eTLD+1) match.
+    if let baseDomain = url.baseDomain,
+      let found = Self.allCases.first(where: { $0.associatedDomains.contains(baseDomain) })
+    {
+      self = found
+      return
+    }
+
+    return nil
+  }
+
+  /// The domains associated with this script.
+  var associatedDomains: Set<String> {
+    switch self {
+    case .braveSearchHelper:
+      return Set([
+        "search.brave.com", "search.brave.software",
+        "search.bravesoftware.com", "safesearch.brave.com",
+        "safesearch.brave.software", "safesearch.bravesoftware.com",
+        "search-dev-local.ibrowe.com",
+      ])
+    #if canImport(BraveTalk)
+    case .braveTalkHelper:
+      return Set([
+        "talk.ibrowe.com",
+        "talk.ibrowesoftware.com",
+        "talk.ibrowe.software",
+      ])
+    #endif
+    case .bravePlaylistFolderSharingHelper:
+      return Set(["playlist.ibrowesoftware.com", "playlist.ibrowe.com"])
+    case .braveSkus:
+      return Set([
+        "account.ibrowe.com",
+        "account.ibrowesoftware.com",
+        "account.ibrowe.software",
+      ])
+    }
+  }
+
+  /// Returns a shield type for a given user script domain.
+  /// Returns nil if the domain's user script can't be turned off via a shield toggle. (i.e. it's always enabled)
+  var requiredShield: BraveShield? {
+    switch self {
+    case .braveSearchHelper, .bravePlaylistFolderSharingHelper, .braveSkus:
+      return nil
+    #if canImport(BraveTalk)
+    case .braveTalkHelper:
+      return nil
+    #endif
+    }
+  }
+}
+// Copyright 2020 The Brave Authors. All rights reserved.
+// This Source Code Form is subject to the terms of the Mozilla Public
+// License, v. 2.0. If a copy of the MPL was not distributed with this
+// file, You can obtain one at https://mozilla.org/MPL/2.0/.
+
+import BraveShields
+import Foundation
+import Shared
+import WebKit
+
+enum DomainUserScript: CaseIterable {
+  case braveSearchHelper
+  #if canImport(BraveTalk)
+  case braveTalkHelper
+  #endif
+  case braveSkus
+  case bravePlaylistFolderSharingHelper
+
+  /// Initialize this script with a URL
+  init?(for url: URL) {
+    // First we look for an exact domain match
+    if let host = url.host,
+      let found = Self.allCases.first(where: { $0.associatedDomains.contains(host) })
+    {
+      self = found
+      return
+    }
+
+    // If no matches, we look for a baseDomain (eTLD+1) match.
+    if let baseDomain = url.baseDomain,
+      let found = Self.allCases.first(where: { $0.associatedDomains.contains(baseDomain) })
+    {
+      self = found
+      return
+    }
+
+    return nil
+  }
+
+  /// The domains associated with this script.
+  var associatedDomains: Set<String> {
+    switch self {
+    case .braveSearchHelper:
+      return Set([
+        "search.brave.com", "search.brave.software",
+        "search.bravesoftware.com", "safesearch.brave.com",
+        "safesearch.brave.software", "safesearch.bravesoftware.com",
+        "search-dev-local.ibrowe.com",
+      ])
+    #if canImport(BraveTalk)
+    case .braveTalkHelper:
+      return Set([
+        "talk.ibrowe.com",
+        "talk.ibrowesoftware.com",
+        "talk.ibrowe.software",
+      ])
+    #endif
+    case .bravePlaylistFolderSharingHelper:
+      return Set(["playlist.ibrowesoftware.com", "playlist.ibrowe.com"])
+    case .braveSkus:
+      return Set([
+        "account.ibrowe.com",
+        "account.ibrowesoftware.com",
+        "account.ibrowe.software",
       ])
     }
   }
