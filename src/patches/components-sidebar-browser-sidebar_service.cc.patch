diff --git a/components/sidebar/browser/sidebar_service.cc b/components/sidebar/browser/sidebar_service.cc
index 58eaa48a012ea8d82d229a717ff700ab306b87c0..f429648801d71fbda874b8948fb40991df65b96b 100644
--- a/components/sidebar/browser/sidebar_service.cc
+++ b/components/sidebar/browser/sidebar_service.cc
@@ -50,10 +50,10 @@ SidebarItem::BuiltInItemType GetBuiltInItemTypeForLegacyURL(
   // A previous version of prefs used the URL even for built-in items, and not
   // the |SidebarItem::BuiltInItemType|. Therefore, this list should not
   // need to be updated.
-  if (url == "https://together.brave.com/" ||
-      url == "https://talk.brave.com/") {
-    return SidebarItem::BuiltInItemType::kBraveTalk;
-  }
+  //if (url == "https://together.brave.com/" ||
+  //    url == "https://talk.brave.com/") {
+  //  return SidebarItem::BuiltInItemType::kBraveTalk;
+  //}
 
   if (url == "chrome://wallet/") {
     return SidebarItem::BuiltInItemType::kWallet;
@@ -153,8 +153,8 @@ void SidebarService::MigratePrefSidebarBuiltInItemsToHidden() {
   }
   // Only include items that were known prior to this migration
   std::vector<SidebarItem> built_in_items_to_hide;
-  built_in_items_to_hide.push_back(
-      GetBuiltInItemForType(SidebarItem::BuiltInItemType::kBraveTalk));
+  //built_in_items_to_hide.push_back(
+  //    GetBuiltInItemForType(SidebarItem::BuiltInItemType::kBraveTalk));
   built_in_items_to_hide.push_back(
       GetBuiltInItemForType(SidebarItem::BuiltInItemType::kWallet));
   built_in_items_to_hide.push_back(
@@ -592,13 +592,13 @@ std::vector<SidebarItem> SidebarService::GetDefaultSidebarItems() const {
 SidebarItem SidebarService::GetBuiltInItemForType(
     SidebarItem::BuiltInItemType type) const {
   switch (type) {
-    case SidebarItem::BuiltInItemType::kBraveTalk:
-      return SidebarItem::Create(
-          GURL(kBraveTalkURL),
-          l10n_util::GetStringUTF16(IDS_SIDEBAR_BRAVE_TALK_ITEM_TITLE),
-          SidebarItem::Type::kTypeBuiltIn,
-          SidebarItem::BuiltInItemType::kBraveTalk,
-          /* open_in_panel = */ false);
+    //case SidebarItem::BuiltInItemType::kBraveTalk:
+    //  return SidebarItem::Create(
+    //      GURL(kBraveTalkURL),
+    //      l10n_util::GetStringUTF16(IDS_SIDEBAR_BRAVE_TALK_ITEM_TITLE),
+    //      SidebarItem::Type::kTypeBuiltIn,
+    //      SidebarItem::BuiltInItemType::kBraveTalk,
+     //     /* open_in_panel = */ false);
     case SidebarItem::BuiltInItemType::kWallet: {
       if (brave_wallet::IsAllowed(prefs_)) {
         return SidebarItem::Create(
@@ -651,14 +651,14 @@ SidebarItem SidebarService::GetBuiltInItemForType(
       return SidebarItem();
     }
     case SidebarItem::BuiltInItemType::kChatUI: {
-      if (ai_chat::IsAIChatEnabled(prefs_)) {
-        return SidebarItem::Create(l10n_util::GetStringUTF16(IDS_CHAT_UI_TITLE),
-                                   SidebarItem::Type::kTypeBuiltIn,
-                                   SidebarItem::BuiltInItemType::kChatUI,
-                                   /* open_in_panel = */ true);
-      } else {
+    //  if (ai_chat::IsAIChatEnabled(prefs_)) {
+    //    return SidebarItem::Create(l10n_util::GetStringUTF16(IDS_CHAT_UI_TITLE),
+    //                               SidebarItem::Type::kTypeBuiltIn,
+    //                               SidebarItem::BuiltInItemType::kChatUI,
+    //                               /* open_in_panel = */ true);
+    //  } else {
         return SidebarItem();
-      }
+    //  }
     }
     case SidebarItem::BuiltInItemType::kNone:
       break;
