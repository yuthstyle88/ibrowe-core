diff --git a/browser/ui/sidebar/sidebar_unittest.cc b/browser/ui/sidebar/sidebar_unittest.cc
index 4d1bb321f3c395e9f2c49f367c5cc0779347757e..79a26e057d827c2a00d214791ded1860a0294eb3 100644
--- a/browser/ui/sidebar/sidebar_unittest.cc
+++ b/browser/ui/sidebar/sidebar_unittest.cc
@@ -100,7 +100,7 @@ TEST_F(SidebarModelTest, ItemsChangedTest) {
 
   // Add one more item to test with 5 items.
   SidebarItem new_item = SidebarItem::Create(
-      GURL("https://www.brave.com/"), u"brave software",
+      GURL("https://www.ibrowe.com/"), u"ibrowe software",
       SidebarItem::Type::kTypeWeb, SidebarItem::BuiltInItemType::kNone, false);
 
   service()->AddItem(new_item);
@@ -110,17 +110,17 @@ TEST_F(SidebarModelTest, ItemsChangedTest) {
   // Update last item w/ url change.
   SidebarItemUpdate expected_update{(items_count - 1), false, true};
   EXPECT_CALL(observer_, OnItemUpdated(testing::_, expected_update)).Times(1);
-  service()->UpdateItem(GURL("https://www.brave.com/"),
-                        GURL("https://brave.com/"), u"brave software",
-                        u"brave software");
+  service()->UpdateItem(GURL("https://www.ibrowe.com/"),
+                        GURL("https://ibrowe.com/"), u"ibrowe software",
+                        u"ibrowe software");
   testing::Mock::VerifyAndClearExpectations(&observer_);
 
   // Update last item w/o url change.
   expected_update.url_updated = false;
   expected_update.title_updated = true;
   EXPECT_CALL(observer_, OnItemUpdated(testing::_, expected_update)).Times(1);
-  service()->UpdateItem(GURL("https://brave.com/"), GURL("https://brave.com/"),
-                        u"brave software", u"brave");
+  service()->UpdateItem(GURL("https://ibrowe.com/"), GURL("https://ibrowe.com/"),
+                        u"ibrowe software", u"ibrowe");
   testing::Mock::VerifyAndClearExpectations(&observer_);
 
   // Move item at 1 to at index 2.
@@ -172,28 +172,28 @@ TEST_F(SidebarModelTest, ItemsChangedTest) {
   EXPECT_THAT(model()->active_index(), Optional(3u));
 }
 
-TEST_F(SidebarModelTest, CanUseNotAddedBuiltInItemInsteadOfTest) {
-  GURL talk("https://talk.brave.com/1Ar1vHfLBWX2sAdi");
-  // False because builtin talk item is already added.
-  EXPECT_FALSE(HiddenDefaultSidebarItemsContains(service(), talk));
-
-  // Remove builtin talk item and check builtin talk item will be used
-  // instead of adding |talk| url.
-  const auto items = service()->items();
-  const auto talk_iter =
-      std::ranges::find(items, SidebarItem::BuiltInItemType::kBraveTalk,
-                        &SidebarItem::built_in_item_type);
-  ASSERT_NE(talk_iter, items.cend());
-  service()->RemoveItemAt(std::distance(items.cbegin(), talk_iter));
-  EXPECT_TRUE(HiddenDefaultSidebarItemsContains(service(), talk));
-}
+// TEST_F(SidebarModelTest, CanUseNotAddedBuiltInItemInsteadOfTest) {
+//   GURL talk("https://talk.ibrowe.com/1Ar1vHfLBWX2sAdi");
+//   // False because builtin talk item is already added.
+//   EXPECT_FALSE(HiddenDefaultSidebarItemsContains(service(), talk));
+
+//   // Remove builtin talk item and check builtin talk item will be used
+//   // instead of adding |talk| url.
+//   const auto items = service()->items();
+//   const auto talk_iter =
+//       std::ranges::find(items, SidebarItem::BuiltInItemType::kBraveTalk,
+//                         &SidebarItem::built_in_item_type);
+//   ASSERT_NE(talk_iter, items.cend());
+//   service()->RemoveItemAt(std::distance(items.cbegin(), talk_iter));
+//   EXPECT_TRUE(HiddenDefaultSidebarItemsContains(service(), talk));
+// }
 
 TEST_F(SidebarModelTest, ActiveIndexChangedAfterItemAdded) {
   model()->SetActiveIndex(1);
   EXPECT_THAT(model()->active_index(), Optional(1u));
 
   SidebarItem item_1 = SidebarItem::Create(
-      GURL("https://www.brave.com/"), u"brave software",
+      GURL("https://www.ibrowe.com/"), u"brave software",
       SidebarItem::Type::kTypeWeb, SidebarItem::BuiltInItemType::kNone, false);
 
   // Check active index is still 1 when new item is added at 2.
@@ -227,16 +227,16 @@ TEST(SidebarUtilTest, SidebarShowOptionsDefaultTest) {
 
 TEST(SidebarUtilTest, ConvertURLToBuiltInItemURLTest) {
   EXPECT_EQ(GURL(kBraveTalkURL),
-            ConvertURLToBuiltInItemURL(GURL("https://talk.brave.com")));
+            ConvertURLToBuiltInItemURL(GURL("https://talk.ibrowe.com")));
   EXPECT_EQ(GURL(kBraveTalkURL),
             ConvertURLToBuiltInItemURL(
-                GURL("https://talk.brave.com/1Ar1vHfLBWX2sAdi")));
+                GURL("https://talk.ibrowe.com/1Ar1vHfLBWX2sAdi")));
   EXPECT_EQ(
       GURL(kBraveUIWalletPageURL),
       ConvertURLToBuiltInItemURL(GURL("chrome://wallet/crypto/onboarding")));
 
   // Not converted for url that doesn't relavant builtin item.
-  GURL brave_com("https://www.brave.com/");
+  GURL brave_com("https://www.ibrowe.com/");
   EXPECT_EQ(brave_com, ConvertURLToBuiltInItemURL(brave_com));
 }
 
