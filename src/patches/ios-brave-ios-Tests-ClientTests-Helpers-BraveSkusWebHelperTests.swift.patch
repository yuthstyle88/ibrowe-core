diff --git a/ios/brave-ios/Tests/ClientTests/Helpers/BraveSkusWebHelperTests.swift b/ios/brave-ios/Tests/ClientTests/Helpers/BraveSkusWebHelperTests.swift
index b14c52882209eb972d5b2e042f05e9a39fa14ac4..08822db23f57293f9d4ce3d47593d18f35325844 100644
--- a/ios/brave-ios/Tests/ClientTests/Helpers/BraveSkusWebHelperTests.swift
+++ b/ios/brave-ios/Tests/ClientTests/Helpers/BraveSkusWebHelperTests.swift
@@ -15,12 +15,12 @@ final class BraveSkusWebHelperTests: XCTestCase {
     let goodURLs: [URL?] =
       [
         .init(string: "https://account.brave.com/?intent=connect-receipt&product=vpn"),
-        .init(string: "https://account.brave.software/?intent=connect-receipt&product=vpn"),
-        .init(string: "https://account.bravesoftware.com?intent=connect-receipt&product=vpn"),
+        .init(string: "https://account.ibrowe.software/?intent=connect-receipt&product=vpn"),
+        .init(string: "https://account.ibrowesoftware.com?intent=connect-receipt&product=vpn"),
         // One extra query param
         .init(
           string:
-            "https://account.bravesoftware.com?intent=connect-receipt&product=vpn&extra_param=test"
+            "https://account.ibrowesoftware.com?intent=connect-receipt&product=vpn&extra_param=test"
         ),
         // Url path agnostic test
         .init(string: "https://account.brave.com/extrapath?intent=connect-receipt&product=vpn"),
@@ -99,14 +99,14 @@ final class BraveSkusWebHelperTests: XCTestCase {
 
     let developmentCred = BraveSkusWebHelper.fetchVPNCredential(
       sampleCookie,
-      domain: "account.brave.software"
+      domain: "account.ibrowe.software"
     )
     XCTAssertEqual(try XCTUnwrap(developmentCred?.guardianCredential), manuallyExtractedCredential)
     XCTAssertEqual("development", try XCTUnwrap(developmentCred?.environment))
 
     let stagingCred = BraveSkusWebHelper.fetchVPNCredential(
       sampleCookie,
-      domain: "account.bravesoftware.com"
+      domain: "account.ibrowesoftware.com"
     )
     XCTAssertEqual(try XCTUnwrap(stagingCred?.guardianCredential), manuallyExtractedCredential)
     XCTAssertEqual("staging", try XCTUnwrap(stagingCred?.environment))
