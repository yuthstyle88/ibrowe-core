diff --git a/browser/ui/toolbar/brave_app_menu_model.cc b/browser/ui/toolbar/brave_app_menu_model.cc
index bb6ab48ce8bbec32fe70fd7e3f0b2a2babda4fb9..c7bcdccf7bb36dda50dcad952da7f59737beee2a 100644
--- a/browser/ui/toolbar/brave_app_menu_model.cc
+++ b/browser/ui/toolbar/brave_app_menu_model.cc
@@ -103,14 +103,6 @@ void BraveAppMenuModel::Build() {
   BuildMoreToolsSubMenu();
   BuildHelpSubMenu();
 
-  ApplyLeoIcons(this);
-  ApplyLeoIcons(bookmark_sub_menu_model());
-
-  for (const auto& submenu : sub_menus()) {
-    ApplyLeoIcons(submenu.get());
-  }
-
-  // TODO(simonhong): apply Nala icons recursively.
   // Can be null in tests.
   if (!bookmark_sub_menu_model()) {
     return;
@@ -122,7 +114,6 @@ void BraveAppMenuModel::Build() {
     auto* reading_list_submenu = bookmark_sub_menu_model()->GetSubmenuModelAt(
         *reading_list_submenu_index);
     CHECK(reading_list_submenu);
-    ApplyLeoIcons(static_cast<ui::SimpleMenuModel*>(reading_list_submenu));
   }
 }
 
@@ -144,33 +135,12 @@ void BraveAppMenuModel::BuildBraveProductsSection() {
   // Needs to add separator as this section is brave specific section.
   bool need_separator = false;
 
-  if (IsCommandIdEnabled(IDC_TOGGLE_AI_CHAT)) {
-    InsertItemWithStringIdAt(GetNextIndexOfBraveProductsSection(),
-                             IDC_TOGGLE_AI_CHAT, IDS_TOGGLE_AI_CHAT);
-    need_separator = true;
-  }
-
   if (IsCommandIdEnabled(IDC_SHOW_BRAVE_WALLET)) {
     InsertItemWithStringIdAt(GetNextIndexOfBraveProductsSection(),
                              IDC_SHOW_BRAVE_WALLET, IDS_SHOW_BRAVE_WALLET);
     need_separator = true;
   }
 
-#if BUILDFLAG(ENABLE_BRAVE_VPN)
-  if (IsCommandIdEnabled(IDC_BRAVE_VPN_MENU)) {
-    sub_menus().push_back(std::make_unique<BraveVPNMenuModel>(
-        browser(), browser()->profile()->GetPrefs()));
-    InsertSubMenuWithStringIdAt(GetNextIndexOfBraveProductsSection(),
-                                IDC_BRAVE_VPN_MENU, IDS_BRAVE_VPN_MENU,
-                                sub_menus().back().get());
-    need_separator = true;
-  } else if (IsCommandIdEnabled(IDC_SHOW_BRAVE_VPN_PANEL)) {
-    InsertItemWithStringIdAt(GetNextIndexOfBraveProductsSection(),
-                             IDC_SHOW_BRAVE_VPN_PANEL, IDS_BRAVE_VPN_MENU);
-    need_separator = true;
-  }
-#endif
-
 #if defined(TOOLKIT_VIEWS)
   if (sidebar::CanUseSidebar(browser())) {
     auto index = GetNextIndexOfBraveProductsSection();
@@ -416,10 +386,7 @@ bool BraveAppMenuModel::IsCommandIdEnabled(int id) const {
 }
 
 size_t BraveAppMenuModel::GetNextIndexOfBraveProductsSection() const {
-  std::vector<int> commands_to_check = {IDC_SHOW_BRAVE_VPN_PANEL,
-                                        IDC_BRAVE_VPN_MENU,
-                                        IDC_SHOW_BRAVE_WALLET,
-                                        IDC_TOGGLE_AI_CHAT,
+  std::vector<int> commands_to_check = {IDC_SHOW_BRAVE_WALLET,
                                         IDC_NEW_OFFTHERECORD_WINDOW_TOR,
                                         IDC_NEW_INCOGNITO_WINDOW,
                                         IDC_NEW_WINDOW};
