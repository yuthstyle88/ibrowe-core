diff --git a/components/static_redirect_helper/static_redirect_helper.cc b/components/static_redirect_helper/static_redirect_helper.cc
index b5d866082b88864c0ea2f41715eaf274618ed76f..cd206a60c0b57b196985dd91ad14171bda36c66e 100644
--- a/components/static_redirect_helper/static_redirect_helper.cc
+++ b/components/static_redirect_helper/static_redirect_helper.cc
@@ -106,7 +106,7 @@ void StaticRedirectHelper(const GURL& request_url, GURL* new_url) {
 
   if (crxDownload_pattern->MatchesURL(request_url)) {
     replacements.SetSchemeStr("https");
-    replacements.SetHostStr("crxdownload.brave.com");
+    replacements.SetHostStr("crxdownload.ibrowe.com");
     *new_url = request_url.ReplaceComponents(replacements);
     return;
   }
@@ -120,28 +120,28 @@ void StaticRedirectHelper(const GURL& request_url, GURL* new_url) {
 
   if (crlSet_pattern1->MatchesURL(request_url)) {
     replacements.SetSchemeStr("https");
-    replacements.SetHostStr("redirector.brave.com");
+    replacements.SetHostStr("redirector.ibrowe.com");
     *new_url = request_url.ReplaceComponents(replacements);
     return;
   }
 
   if (crlSet_pattern2->MatchesURL(request_url)) {
     replacements.SetSchemeStr("https");
-    replacements.SetHostStr("redirector.brave.com");
+    replacements.SetHostStr("redirector.ibrowe.com");
     *new_url = request_url.ReplaceComponents(replacements);
     return;
   }
 
   if (crlSet_pattern3->MatchesURL(request_url)) {
     replacements.SetSchemeStr("https");
-    replacements.SetHostStr("redirector.brave.com");
+    replacements.SetHostStr("redirector.ibrowe.com");
     *new_url = request_url.ReplaceComponents(replacements);
     return;
   }
 
   if (crlSet_pattern4->MatchesURL(request_url)) {
     replacements.SetSchemeStr("https");
-    replacements.SetHostStr("redirector.brave.com");
+    replacements.SetHostStr("redirector.ibrowe.com");
     *new_url = request_url.ReplaceComponents(replacements);
     return;
   }
