diff --git a/browser/ui/sidebar/sidebar_unittest.cc b/browser/ui/sidebar/sidebar_unittest.cc
index 4d1bb321f3c395e9f2c49f367c5cc0779347757e..db0e14bb89a24d6a1bcdf255ffd99f02869950b9 100644
--- a/browser/ui/sidebar/sidebar_unittest.cc
+++ b/browser/ui/sidebar/sidebar_unittest.cc
@@ -172,21 +172,21 @@ TEST_F(SidebarModelTest, ItemsChangedTest) {
   EXPECT_THAT(model()->active_index(), Optional(3u));
 }
 
-TEST_F(SidebarModelTest, CanUseNotAddedBuiltInItemInsteadOfTest) {
-  GURL talk("https://talk.brave.com/1Ar1vHfLBWX2sAdi");
-  // False because builtin talk item is already added.
-  EXPECT_FALSE(HiddenDefaultSidebarItemsContains(service(), talk));
-
-  // Remove builtin talk item and check builtin talk item will be used
-  // instead of adding |talk| url.
-  const auto items = service()->items();
-  const auto talk_iter =
-      std::ranges::find(items, SidebarItem::BuiltInItemType::kBraveTalk,
-                        &SidebarItem::built_in_item_type);
-  ASSERT_NE(talk_iter, items.cend());
-  service()->RemoveItemAt(std::distance(items.cbegin(), talk_iter));
-  EXPECT_TRUE(HiddenDefaultSidebarItemsContains(service(), talk));
-}
+// TEST_F(SidebarModelTest, CanUseNotAddedBuiltInItemInsteadOfTest) {
+//   GURL talk("https://talk.brave.com/1Ar1vHfLBWX2sAdi");
+//   // False because builtin talk item is already added.
+//   EXPECT_FALSE(HiddenDefaultSidebarItemsContains(service(), talk));
+
+//   // Remove builtin talk item and check builtin talk item will be used
+//   // instead of adding |talk| url.
+//   const auto items = service()->items();
+//   const auto talk_iter =
+//       std::ranges::find(items, SidebarItem::BuiltInItemType::kBraveTalk,
+//                         &SidebarItem::built_in_item_type);
+//   ASSERT_NE(talk_iter, items.cend());
+//   service()->RemoveItemAt(std::distance(items.cbegin(), talk_iter));
+//   EXPECT_TRUE(HiddenDefaultSidebarItemsContains(service(), talk));
+// }
 
 TEST_F(SidebarModelTest, ActiveIndexChangedAfterItemAdded) {
   model()->SetActiveIndex(1);
